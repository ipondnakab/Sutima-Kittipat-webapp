{"version":3,"sources":["components/PostComponent/man.svg","components/PostComponent/bg2.jpg","components/Navbar/index.js","screens/LoginPage/index.js","assets/images/images.js","assets/functions/auth.js","screens/RegisterPage/index.js","components/PostComponent/index.js","screens/PublicPage/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","menu","undefined","className","style","justifyContent","to","display","LoginPage","setIsLogin","class","src","width","alt","action","for","type","placeholder","name","required","id","href","clientId","onSuccess","response","localStorage","setItem","responseGoogle","onFailure","err","console","log","cookiePolicy","height","appId","fields","callback","responseFacebook","RegisterPage","res","onClick","data","warn","PostCoponent","profile","post","img","iconProfile","follower","postImage","detail","PublicPage","paddingBottom","flexDirection","alignItems","map","val","key","marginTop","PostComponent","App","useState","isLogin","setPath","token","getItem","currentPath","window","location","pathname","history","useHistory","MenuNavbarOnLogin","MenuNavbar","path","listMenu","icon","color","iconActive","item","cursor","fontSize","marginLeft","removeItem","logout","substring","length","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.02cf3e82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/man.ef68baee.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg2.2f46140e.jpg\";","import React from \"react\";\nimport \"./navbar.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction Navbar({ menu }) {\n  menu = menu === undefined ? true : menu;\n  return (\n    <nav className=\"nav-bar\">\n      <div\n        className=\"nav\"\n        style={{ justifyContent: menu ? \"space-between\" : \"start\" }}\n      >\n        <div className=\"left-nav\">\n          <Link className={\"logo\"} to=\"/\">\n            <h1>Logo</h1>\n          </Link>\n        </div>\n        <div className=\"right-nav\" style={{ display: menu ? \"flex\" : \"none\" }}>\n          {menu ? menu : null}\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./login-page.css\";\nimport * as images from \"../../assets/images/images\";\nimport { GoogleLogin } from \"react-google-login\";\nimport FacebookLogin from \"react-facebook-login\";\nimport { responseFacebook, responseGoogle } from \"../../assets/functions/auth\";\n\nfunction LoginPage({ setIsLogin }) {\n  return (\n    <div class=\"column\">\n      <div class=\"left-coloumn\">\n        <h1>Logo</h1>\n        <img src={images.logoLogin} width=\"400px\" alt=\"logo\" />\n        <p>That is your market</p>\n      </div>\n\n      <div class=\"right-column\">\n        <div class=\"login\">\n          <h2>Login with your e-mail</h2>\n          <br />\n\n          <form action=\"\" class=\"form\">\n            <label for=\"uname\">\n              <b>Email address</b>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Email address\"\n              name=\"uname\"\n              required\n            />\n            <label for=\"psw\">\n              <b>Password</b>\n            </label>\n\n            <input type=\"password\" placeholder=\"Password\" name=\"psw\" required />\n\n            <button class=\"button-submit\" type=\"submit\">\n              Login\n            </button>\n            <br />\n\n            <div class=\"radio\">\n              <label>\n                <input type=\"radio\" id=\"checked\" name=\"remember\" /> Remember me\n              </label>\n              <p>\n                {\" \"}\n                Forgot <a href=\"#\">password</a>\n              </p>\n            </div>\n          </form>\n        </div>\n\n        <h2>Or</h2>\n        <h2>Use social sign in</h2>\n\n        <div class=\"logo\">\n          <GoogleLogin\n            clientId=\"964427814223-2p8jsupo987e8qfadkthalnh7m5q6up4.apps.googleusercontent.com\"\n            onSuccess={(response) => responseGoogle({ response, setIsLogin })}\n            onFailure={(err) => {\n              console.log(err);\n            }}\n            cookiePolicy={\"single_host_origin\"}\n            style={{ height: \"100%\" }}\n          />\n\n          <FacebookLogin\n            appId=\"364075804676399\"\n            fields=\"name,email,picture\"\n            callback={(response) => responseFacebook({ response, setIsLogin })}\n            onFailure={(err) => {\n              console.log(err);\n            }}\n          />\n        </div>\n\n        <span class=\"rst\">\n          If you don't have account <a href=\"#\">Register</a>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginPage;\n","export const iconFacebook = \"https://www.flaticon.com/svg/static/icons/svg/145/145802.svg\"\nexport const iconGoogle = \"https://www.flaticon.com/svg/static/icons/svg/2702/2702602.svg\"\nexport const logoLogin = \"https://raw.githubusercontent.com/ipondnakab/Sutima-Kittipat-webapp/master/src/assets/images/img-login-page.svg\"\nexport const logoRegister = \"https://raw.githubusercontent.com/ipondnakab/Sutima-Kittipat-webapp/master/src/assets/images/img-register-page.svg\"","export const checkToken = () => {\n  return localStorage.getItem(\"token\") ? true : false;\n};\n\nexport const responseFacebook = ({ response, setIsLogin }) => {\n  localStorage.setItem(\"token\", response[\"accessToken\"]);\n  setIsLogin(true);\n};\n\nexport const responseGoogle = ({ response, setIsLogin }) => {\n  localStorage.setItem(\"token\", response[\"accessToken\"]);\n  setIsLogin(true);\n};\n\nexport const logout = ({ setIsLogin }) => {\n  localStorage.removeItem(\"token\");\n  console.log(\"Logout success\");\n  setIsLogin(false);\n};\n","import React from \"react\";\nimport * as images from \"../../assets/images/images\";\nimport { GoogleLogin } from \"react-google-login\";\nimport FacebookLogin from \"react-facebook-login\";\n\nfunction RegisterPage() {\n  const responseGoogle = (res) => {\n    console.log(res);\n  };\n  const responseFacebook = (response) => {\n    console.log(response);\n  };\n  return (\n    <div class=\"column\">\n      <div class=\"left-coloumn\">\n        <h1>Logo</h1>\n        <img src={images.logoRegister} width=\"400px\" alt=\"logo\" />\n        <p>That is your market</p>\n      </div>\n\n      <div class=\"right-column\">\n        <div class=\"login\">\n          <h2>Register with your e-mail</h2>\n          <br />\n\n          <form action=\"\" class=\"form\">\n            <label for=\"name\">\n              <b>Username</b>\n            </label>\n            <input type=\"text\" placeholder=\"Username\" name=\"name\" required />\n            <label for=\"uname\">\n              <b>Email address</b>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Email address\"\n              name=\"uname\"\n              required\n            />\n            <label for=\"psw\">\n              <b>Password</b>\n            </label>\n            <input type=\"password\" placeholder=\"Password\" name=\"psw\" required />\n\n            <label>\n              <input type=\"radio\" id=\"check\" name=\"remember\" /> Remember me\n            </label>\n            <br />\n\n            <button class=\"button-submit\" type=\"submit\">\n              Submit\n            </button>\n            <br />\n          </form>\n        </div>\n\n        <h2>Or</h2>\n        <h2>Use social sign in</h2>\n\n        <div class=\"logo\">\n          <GoogleLogin\n            clientId=\"964427814223-2p8jsupo987e8qfadkthalnh7m5q6up4.apps.googleusercontent.com\"\n            onSuccess={responseGoogle}\n            onFailure={responseGoogle}\n            cookiePolicy={\"single_host_origin\"}\n          />\n          <FacebookLogin\n            appId=\"364075804676399\"\n\n            fields=\"name,email,picture\"\n            onClick={(data) => {\n              console.warn(data);\n            }}\n            callback={responseFacebook}\n          />\n        </div>\n\n        <span class=\"rst\">\n          If you have account<a href=\"#\">Login</a>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default RegisterPage;\n","import React from \"react\";\nimport \"./post-component.css\";\nimport iconProfile from \"./man.svg\";\nimport postImage from \"./bg2.jpg\";\n\nfunction PostCoponent({ profile, post }) {\n  return (\n    <article className=\"post-component\">\n      <header>\n        <img src={profile ? profile.img : iconProfile} alt=\"profile\"/>\n        <div>\n          <h2>{profile ? profile.name : \"nameUser\"}</h2>\n          <p>{profile ? profile.follower : \"NoF\"}</p>\n        </div>\n      </header>\n      <main>\n        {/* <img src={post ? post.image : postImage} /> */}\n        <img\n          src={post ? post.img : postImage}\n          alt=\"post image\"\n        />\n        <p>\n          {post\n            ? post.detail\n            : \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\"}\n        </p>\n      </main>\n      <footer>\n        <div className=\"post-footer-left\">\n          <p>like </p>\n          <p>comment</p>\n          <p>Chat</p>\n        </div>\n        <div className=\"post-footer-right\"></div>\n      </footer>\n    </article>\n  );\n}\n\nexport default PostCoponent;\n","import React from \"react\";\nimport PostComponent from \"../../components/PostComponent\";\n\nfunction PublicPage() {\n  let tem = [\n    {\n      profile: {\n        img: \"https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg\",\n        name: \"Kittipat\",\n        follower: \"12.1K\",\n      },\n      post: {\n        img: \"https://www.treehugger.com/thmb/bM_zeJcC8UpFkNa39UK69dfoT2w=/735x0/__opt__aboutcom__coeus__resources__content_migration__mnn__images__2017__01__cow-in-pasture-crop2-3b8cdbd62aee45f6ab8d49228fa85272.jpg\",\n        detail:\n          \"Ipsum is simply dummy text of the printing and typesetting industry. Industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n      },\n    },\n    {\n      profile: {\n        img: \"https://www.flaticon.com/svg/static/icons/svg/3135/3135789.svg\",\n        name: \"Sutima\",\n        follower: \"20.4K\",\n      },\n      post: {\n        img: \"https://cdn.britannica.com/55/174255-050-526314B6/brown-Guernsey-cow.jpg\",\n        detail:\n          \"simply dummy text of the printing and typesetting industry. Industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n      },\n    },\n    {\n      profile: {\n        img: \"https://www.flaticon.com/svg/static/icons/svg/3011/3011292.svg\",\n        name: \"Chakriya\",\n        follower: \"5.12M\",\n      },\n      post: {\n        img: \"https://dkpo4ygqb6rh6.cloudfront.net/COWSIGNALS_COM/imageresized/4023/8248646f7e35630b2bb4bf597c22b73a/2560_1440_75_fixedjpg/cowsignals_2560px.jpg\",\n        detail:\n          \"text of the printing and typesetting industry. Industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n      },\n    },\n  ];\n  return (\n    <div\n      style={{\n        paddingBottom: 70,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      {tem.map((val, key) => {\n        return (\n          <div\n            style={{\n              marginTop: 32,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <PostComponent post={val.post} profile={val.profile} key={key} />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default PublicPage;\n","import React, { Profiler, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n} from \"react-router-dom\";\nimport { RiEarthLine, RiEarthFill } from \"react-icons/ri\";\nimport { AiOutlineShop, AiFillShop } from \"react-icons/ai\";\nimport { FiLogOut } from \"react-icons/fi\";\nimport { BsPerson, BsPersonFill } from \"react-icons/bs\";\n\n//components\nimport Navbar from \"./components/Navbar\";\nimport LoginPage from \"./screens/LoginPage\";\nimport RegisterPage from \"./screens/RegisterPage\";\nimport PublicPage from \"./screens/PublicPage\";\nimport { ButtonS1 } from \"./components/ButonStyle\";\n\n//style\nimport \"./App.css\";\n\n//function\nimport { checkToken, logout } from \"./assets/functions/auth\";\n\nexport default function App() {\n  const [isLogin, setIsLogin] = useState(false);\n  const [path, setPath] = useState(\"/\");\n\n  const token = checkToken();\n  if (!isLogin && token) {\n    setIsLogin(true);\n  }\n  const currentPath = window.location.pathname;\n  let history = useHistory();\n\n  return (\n    <Router>\n      <div>\n        <Navbar\n          menu={\n            isLogin\n              ? MenuNavbarOnLogin({ currentPath, setPath, setIsLogin, history })\n              : MenuNavbar(isLogin)\n          }\n        />\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/register\">\n            {token ? <PublicPage /> : <RegisterPage setIsLogin={setIsLogin} />}\n          </Route>\n          <Route path=\"/login\">\n            {token ? <PublicPage /> : <LoginPage setIsLogin={setIsLogin} />}\n          </Route>\n          <Route path=\"/\">\n            <PublicPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nconst MenuNavbarOnLogin = ({ currentPath, setPath, setIsLogin, history }) => {\n  const listMenu = [\n    {\n      name: \"dashboard\",\n      icon: <RiEarthLine color=\"white\" />,\n      iconActive: <RiEarthFill color=\"white\" />,\n      path: \"/dashboard\",\n    },\n    {\n      name: \"market\",\n      icon: <AiOutlineShop color=\"white\" />,\n      iconActive: <AiFillShop color=\"white\" />,\n      path: \"/market\",\n    },\n    {\n      name: \"profile\",\n      icon: <BsPerson color=\"white\" />,\n      iconActive: <BsPersonFill color=\"white\" />,\n      path: \"/profile\",\n    },\n    {\n      name: \"logout\",\n      icon: <FiLogOut color=\"white\" />,\n      iconActive: <FiLogOut color=\"white\" />,\n      path: \"/\",\n    },\n  ];\n\n  return (\n    <div>\n      {listMenu.map((item) => {\n        return (\n          <Link\n            style={{\n              cursor: \"pointer\",\n              fontSize: \"1.5rem\",\n              marginLeft: \"0.8rem\",\n              color: \"white\",\n            }}\n            to={item.path}\n            onClick={() => {\n              setPath(item.path);\n              if (item.name == \"logout\") {\n                logout({ setIsLogin });\n                window.location.pathname = \"/login\";\n                setPath(\"/login\");\n              }\n            }}\n          >\n            {currentPath.substring(0, item.path.length) == item.path\n              ? item.iconActive\n              : item.icon}\n          </Link>\n        );\n      })}\n    </div>\n  );\n};\n\nconst MenuNavbar = (isLogin) => {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n      <Link to={isLogin ? \"/\" : \"/login\"} className=\"button-style-1\">\n        Login\n      </Link>\n      <Link\n        to={isLogin ? \"/\" : \"/register\"}\n        className=\"button-style-1\"\n        style={{ marginLeft: 20 }}\n      >\n        Register\n      </Link>\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}