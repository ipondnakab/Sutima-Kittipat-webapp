{"version":3,"sources":["components/Navbar/index.js","assets/functions/firebase.js","assets/functions/auth.js","screens/LoginPage/index.js","assets/images/images.js","screens/RegisterPage/index.js","components/PostComponent/man.svg","components/PostComponent/bg2.jpg","components/PostComponent/index.js","screens/PublicPage/index.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","menu","undefined","className","style","justifyContent","to","display","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","responseFacebook","response","setIsLogin","localStorage","setItem","responseGoogle","signInWEP","email","password","auth","signInWithEmailAndPassword","then","res","console","log","catch","err","error","LoginPage","props","useState","setEmail","setPassword","src","width","alt","action","for","type","placeholder","name","onChange","e","target","value","required","onClick","preventDefault","id","href","clientId","onSuccess","onFailure","cookiePolicy","height","fields","callback","RegisterPage","setUsername","class","createUserWithEmailAndPassword","signUpWEP","PostCoponent","profile","post","img","iconProfile","follower","postImage","detail","PublicPage","paddingBottom","flexDirection","alignItems","map","val","key","marginTop","PostComponent","App","isLogin","setPath","token","getItem","currentPath","window","location","pathname","MenuNavbarOnLogin","MenuNavbar","path","listMenu","icon","color","iconActive","item","cursor","fontSize","marginLeft","removeItem","logout","substring","length","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bbf9adc4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./navbar.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction Navbar({ menu }) {\n  menu = menu === undefined ? true : menu;\n  return (\n    <nav className=\"nav-bar\">\n      <div\n        className=\"nav\"\n        style={{ justifyContent: menu ? \"space-between\" : \"start\" }}\n      >\n        <div className=\"left-nav\">\n          <Link className={\"logo\"} to=\"/\">\n            <h1>Logo</h1>\n          </Link>\n        </div>\n        <div className=\"right-nav\" style={{ display: menu ? \"flex\" : \"none\" }}>\n          {menu ? menu : null}\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import firebase from \"firebase\";\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBlkL_X4nWqW5Y1TIsDsQZnFOvgyfkKdZM\",\n  authDomain: \"farmacro-af287.firebaseapp.com\",\n  databaseURL: \"https://farmacro-af287.firebaseio.com\",\n  projectId: \"farmacro-af287\",\n  storageBucket: \"farmacro-af287.appspot.com\",\n  messagingSenderId: \"964427814223\",\n  appId: \"1:964427814223:web:8660f5af152ff5299da13a\",\n  measurementId: \"G-78M5EZYR9J\",\n};\n\n// Initialize Firebase\nexport default firebase.initializeApp(firebaseConfig);\n","import firebase from \"./firebase\";\nexport const checkToken = () => {\n  return localStorage.getItem(\"token\") ? true : false;\n};\n\nexport const responseFacebook = ({ response, setIsLogin }) => {\n  if (response[\"accessToken\"]) {\n    localStorage.setItem(\"token\", response[\"accessToken\"]);\n    setIsLogin(true);\n  } else {\n    return;\n  }\n};\n\nexport const responseGoogle = ({ response, setIsLogin }) => {\n  if (response[\"accessToken\"]) {\n    localStorage.setItem(\"token\", response[\"accessToken\"]);\n    setIsLogin(true);\n  } else {\n    return;\n  }\n};\n\nexport const signUpWEP = ({ email, password, setIsLogin }) => {\n  firebase\n    .auth()\n    .createUserWithEmailAndPassword(email, password)\n    .then((res) => signInWEP({ email, password, setIsLogin }))\n    .catch((err) => console.error(err));\n};\nexport const signInWEP = ({ email, password, setIsLogin }) => {\n  firebase\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .then((res) => {\n      console.log(res);\n      if (res[\"user\"][\"refreshToken\"]) {\n        localStorage.setItem(\"token\", res[\"user\"][\"refreshToken\"]);\n        setIsLogin(true);\n      } else {\n        return;\n      }\n    })\n    .catch((err) => console.error(err));\n};\nexport const logout = ({ setIsLogin }) => {\n  localStorage.removeItem(\"token\");\n  console.log(\"Logout success\");\n  setIsLogin(false);\n};\n","import React, { useState } from \"react\";\nimport \"./login-page.css\";\nimport * as images from \"../../assets/images/images\";\nimport { GoogleLogin } from \"react-google-login\";\nimport FacebookLogin from \"react-facebook-login\";\nimport {\n  responseFacebook,\n  responseGoogle,\n  signInWEP,\n} from \"../../assets/functions/auth\";\n\nfunction LoginPage(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const login = (e) => {\n    e.preventDefault();\n    signInWEP({ email, password, ...props });\n  };\n  return (\n    <div className=\"column\">\n      <div className=\"left-coloumn\">\n        <h1>Logo</h1>\n        <img src={images.logoLogin} width=\"400px\" alt=\"logo\" />\n        <p>That is your market</p>\n      </div>\n\n      <div className=\"right-column\">\n        <div className=\"login\">\n          <h2>Login with your e-mail</h2>\n          <br />\n\n          <form action=\"\" className=\"form\">\n            <label for=\"email\">\n              <b>Email address</b>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Email address\"\n              name=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n            <label for=\"password\">\n              <b>Password</b>\n            </label>\n\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n\n            <button className=\"button-submit\" type=\"submit\" onClick={login}>\n              Login\n            </button>\n            <br />\n\n            <div className=\"radio\">\n              <label>\n                <input type=\"radio\" id=\"checked\" name=\"remember\" /> Remember me\n              </label>\n              <p>\n                {\" \"}\n                Forgot <a href=\"#\">password</a>\n              </p>\n            </div>\n          </form>\n        </div>\n\n        <h2>Or</h2>\n        <h2>Use social sign in</h2>\n\n        <div className=\"logo\">\n          <GoogleLogin\n            clientId=\"964427814223-2p8jsupo987e8qfadkthalnh7m5q6up4.apps.googleusercontent.com\"\n            onSuccess={(response) => responseGoogle({ response, ...props })}\n            onFailure={(err) => {\n              console.log(err);\n            }}\n            cookiePolicy={\"single_host_origin\"}\n            style={{ height: \"100%\" }}\n          />\n\n          <FacebookLogin\n            appId=\"364075804676399\"\n            fields=\"name,email,picture\"\n            callback={(response) => responseFacebook({ response, ...props })}\n            onFailure={(err) => {\n              console.log(err);\n            }}\n          />\n        </div>\n\n        <span className=\"rst\">\n          If you don't have account <a href=\"#\">Register</a>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginPage;\n","export const iconFacebook = \"https://www.flaticon.com/svg/static/icons/svg/145/145802.svg\"\nexport const iconGoogle = \"https://www.flaticon.com/svg/static/icons/svg/2702/2702602.svg\"\nexport const logoLogin = \"https://raw.githubusercontent.com/ipondnakab/Sutima-Kittipat-webapp/master/src/assets/images/img-login-page.svg\"\nexport const logoRegister = \"https://raw.githubusercontent.com/ipondnakab/Sutima-Kittipat-webapp/master/src/assets/images/img-register-page.svg\"","import React, { useState } from \"react\";\nimport * as images from \"../../assets/images/images\";\nimport { GoogleLogin } from \"react-google-login\";\nimport FacebookLogin from \"react-facebook-login\";\nimport {\n  responseFacebook,\n  responseGoogle,\n  signUpWEP,\n} from \"../../assets/functions/auth\";\n\nfunction RegisterPage(props) {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const register = (e) => {\n    e.preventDefault();\n    signUpWEP({ ...props, email, password });\n  };\n  return (\n    <div class=\"column\">\n      <div class=\"left-coloumn\">\n        <h1>Logo</h1>\n        <img src={images.logoRegister} width=\"400px\" alt=\"logo\" />\n        <p>That is your market</p>\n      </div>\n\n      <div class=\"right-column\">\n        <div class=\"login\">\n          <h2>Register with your e-mail</h2>\n          <br />\n\n          <form action=\"\" class=\"form\">\n            <label for=\"username\">\n              <b>Username</b>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Username\"\n              name=\"username\"\n              onChange={(e) => setUsername(e.target.value)}\n              required\n            />\n            <label for=\"email\">\n              <b>Email address</b>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Email address\"\n              name=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n            <label for=\"psw\">\n              <b>Password</b>\n            </label>\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"psw\"\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n\n            <label>\n              <input type=\"radio\" id=\"check\" name=\"remember\" /> Remember me\n            </label>\n            <br />\n\n            <button class=\"button-submit\" type=\"submit\" onClick={register}>\n              Submit\n            </button>\n            <br />\n          </form>\n        </div>\n\n        <h2>Or</h2>\n        <h2>Use social sign in</h2>\n\n        <div class=\"logo\">\n          <GoogleLogin\n            clientId=\"964427814223-2p8jsupo987e8qfadkthalnh7m5q6up4.apps.googleusercontent.com\"\n            onSuccess={(response) => responseGoogle({ response, ...props })}\n            onFailure={(err) => {\n              console.log(err);\n            }}\n            cookiePolicy={\"single_host_origin\"}\n            style={{ height: \"100%\" }}\n          />\n\n          <FacebookLogin\n            appId=\"364075804676399\"\n            fields=\"name,email,picture\"\n            callback={(response) => responseFacebook({ response, ...props })}\n            onFailure={(err) => {\n              console.log(err);\n            }}\n          />\n        </div>\n\n        <span class=\"rst\">\n          If you have account<a href=\"#\">Login</a>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default RegisterPage;\n","export default __webpack_public_path__ + \"static/media/man.70450708.svg\";","export default __webpack_public_path__ + \"static/media/bg2.16afb43f.jpg\";","import React from \"react\";\nimport \"./post-component.css\";\nimport iconProfile from \"./man.svg\";\nimport postImage from \"./bg2.jpg\";\n\nfunction PostCoponent({ profile, post }) {\n  return (\n    <article className=\"post-component\">\n      <header>\n        <img src={profile ? profile.img : iconProfile} alt=\"profile\"/>\n        <div>\n          <h2>{profile ? profile.name : \"nameUser\"}</h2>\n          <p>{profile ? profile.follower : \"NoF\"}</p>\n        </div>\n      </header>\n      <main>\n        {/* <img src={post ? post.image : postImage} /> */}\n        <img\n          src={post ? post.img : postImage}\n          alt=\"post image\"\n        />\n        <p>\n          {post\n            ? post.detail\n            : \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\"}\n        </p>\n      </main>\n      <footer>\n        <div className=\"post-footer-left\">\n          <p>like </p>\n          <p>comment</p>\n          <p>Chat</p>\n        </div>\n        <div className=\"post-footer-right\"></div>\n      </footer>\n    </article>\n  );\n}\n\nexport default PostCoponent;\n","import React from \"react\";\nimport PostComponent from \"../../components/PostComponent\";\n\nfunction PublicPage() {\n  let tem = [\n    {\n      profile: {\n        img: \"https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg\",\n        name: \"Kittipat\",\n        follower: \"12.1K\",\n      },\n      post: {\n        img: \"https://www.treehugger.com/thmb/bM_zeJcC8UpFkNa39UK69dfoT2w=/735x0/__opt__aboutcom__coeus__resources__content_migration__mnn__images__2017__01__cow-in-pasture-crop2-3b8cdbd62aee45f6ab8d49228fa85272.jpg\",\n        detail:\n          \"Ipsum is simply dummy text of the printing and typesetting industry. Industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n      },\n    },\n    {\n      profile: {\n        img: \"https://www.flaticon.com/svg/static/icons/svg/3135/3135789.svg\",\n        name: \"Sutima\",\n        follower: \"20.4K\",\n      },\n      post: {\n        img: \"https://cdn.britannica.com/55/174255-050-526314B6/brown-Guernsey-cow.jpg\",\n        detail:\n          \"simply dummy text of the printing and typesetting industry. Industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n      },\n    },\n    {\n      profile: {\n        img: \"https://www.flaticon.com/svg/static/icons/svg/3011/3011292.svg\",\n        name: \"Chakriya\",\n        follower: \"5.12M\",\n      },\n      post: {\n        img: \"https://dkpo4ygqb6rh6.cloudfront.net/COWSIGNALS_COM/imageresized/4023/8248646f7e35630b2bb4bf597c22b73a/2560_1440_75_fixedjpg/cowsignals_2560px.jpg\",\n        detail:\n          \"text of the printing and typesetting industry. Industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n      },\n    },\n  ];\n  return (\n    <div\n      style={{\n        paddingBottom: 70,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      {tem.map((val, key) => {\n        return (\n          <div\n            style={{\n              marginTop: 32,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <PostComponent post={val.post} profile={val.profile} key={key} />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default PublicPage;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { RiEarthLine, RiEarthFill } from \"react-icons/ri\";\nimport { AiOutlineShop, AiFillShop } from \"react-icons/ai\";\nimport { FiLogOut } from \"react-icons/fi\";\nimport { BsPerson, BsPersonFill } from \"react-icons/bs\";\n\n//components\nimport Navbar from \"./components/Navbar\";\nimport LoginPage from \"./screens/LoginPage\";\nimport RegisterPage from \"./screens/RegisterPage\";\nimport PublicPage from \"./screens/PublicPage\";\n\n//style\nimport \"./App.css\";\n\n//function\nimport { checkToken, logout } from \"./assets/functions/auth\";\n\nexport default function App() {\n  const [isLogin, setIsLogin] = useState(false);\n  const [path, setPath] = useState(\"/\");\n\n  const token = checkToken();\n  if (!isLogin && token) {\n    setIsLogin(true);\n  }\n  const currentPath = window.location.pathname;\n\n  return (\n    <Router>\n      <div>\n        <Navbar\n          menu={\n            isLogin\n              ? MenuNavbarOnLogin({\n                  currentPath,\n                  setPath,\n                  setIsLogin,\n                })\n              : MenuNavbar(isLogin)\n          }\n        />\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/register\">\n            {token ? <PublicPage /> : <RegisterPage setIsLogin={setIsLogin} />}\n          </Route>\n          <Route path=\"/login\">\n            {token ? <PublicPage /> : <LoginPage setIsLogin={setIsLogin} />}\n          </Route>\n          <Route path=\"/\">\n            <PublicPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nconst MenuNavbarOnLogin = ({ currentPath, setPath, setIsLogin }) => {\n  const listMenu = [\n    {\n      name: \"dashboard\",\n      icon: <RiEarthLine color=\"white\" />,\n      iconActive: <RiEarthFill color=\"white\" />,\n      path: \"/dashboard\",\n    },\n    {\n      name: \"market\",\n      icon: <AiOutlineShop color=\"white\" />,\n      iconActive: <AiFillShop color=\"white\" />,\n      path: \"/market\",\n    },\n    {\n      name: \"profile\",\n      icon: <BsPerson color=\"white\" />,\n      iconActive: <BsPersonFill color=\"white\" />,\n      path: \"/profile\",\n    },\n    {\n      name: \"logout\",\n      icon: <FiLogOut color=\"white\" />,\n      iconActive: <FiLogOut color=\"white\" />,\n      path: \"/login\",\n    },\n  ];\n\n  return (\n    <div>\n      {listMenu.map((item) => {\n        return (\n          <Link\n            style={{\n              cursor: \"pointer\",\n              fontSize: \"1.5rem\",\n              marginLeft: \"0.8rem\",\n              color: \"white\",\n            }}\n            to={item.path}\n            onClick={() => {\n              setPath(item.path);\n              if (item.name === \"logout\") {\n                logout({ setIsLogin });\n                setPath(\"/login\");\n              }\n            }}\n          >\n            {currentPath.substring(0, item.path.length) === item.path\n              ? item.iconActive\n              : item.icon}\n          </Link>\n        );\n      })}\n    </div>\n  );\n};\n\nconst MenuNavbar = (isLogin) => {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n      <Link to={isLogin ? \"/\" : \"/login\"} className=\"button-style-1\">\n        Login\n      </Link>\n      <Link\n        to={isLogin ? \"/\" : \"/register\"}\n        className=\"button-style-1\"\n        style={{ marginLeft: 20 }}\n      >\n        Register\n      </Link>\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}