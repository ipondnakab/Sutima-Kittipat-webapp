{"version":3,"sources":["assets/images/logo-login.svg","assets/images/google.svg","components/PostComponent/man.svg","components/PostComponent/bg2.jpg","components/Navbar/index.js","screens/LoginPage/index.js","screens/RegisterPage/index.js","components/PostComponent/index.js","screens/PublicPage/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","menu","undefined","className","style","justifyContent","display","LoginPage","class","src","logoLoginPage","width","alt","action","for","type","placeholder","name","required","id","href","logoGoogle","RegisterPage","PostCoponent","profile","post","img","iconProfile","follower","postImage","detail","PublicPage","paddingBottom","flexDirection","alignItems","map","val","key","marginTop","PostComponent","App","to","marginLeft","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dd6c8858.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-login.02d31de0.svg\";","module.exports = __webpack_public_path__ + \"static/media/google.02d31de0.svg\";","module.exports = __webpack_public_path__ + \"static/media/man.ef68baee.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg2.2f46140e.jpg\";","import React from \"react\";\nimport \"./navbar.css\";\n\nfunction Navbar({ menu }) {\n  menu = menu === undefined ? true : menu;\n  return (\n    <nav className=\"nav-bar\">\n      <div\n        className=\"nav\"\n        style={{ justifyContent: menu ? \"space-between\" : \"start\" }}\n      >\n        <div className=\"left-nav\">\n          <h1>Logo</h1>\n        </div>\n        <div className=\"right-nav\" style={{ display: menu ? \"flex\" : \"none\" }}>\n          {menu ? menu : null}\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./login-page.css\";\nimport logoLoginPage from \"../../assets/images/logo-login.svg\";\nimport logoGoogle from \"../../assets/images/google.svg\";\n// import logoFacebook  from \"../../assets/images/facebook.png\";\n\nfunction LoginPage() {\n    return (\n        <div class=\"column\">\n\n            <div class=\"left-coloumn\">\n                <h1>Logo</h1>\n                <img src={logoLoginPage} width=\"400px\" alt=\"logo\" />\n                <h3>That is your market</h3>\n\n            </div>\n\n            <div class=\"right-column\">\n\n                <div class=\"login\">\n                    <h2>Login with your e-mail</h2><br />\n\n                    <form action=\"\" class=\"form\">\n                        <label for=\"uname\"><b>Email address</b></label>\n                        <input type=\"text\" placeholder=\"Email address\" name=\"uname\" required />\n                        <label for=\"psw\"><b>Password</b></label>\n\n                        <input type=\"password\" placeholder=\"Password\" name=\"psw\" required />\n\n                        <button type=\"submit\">Login</button><br />\n\n                        <div class=\"radio\">\n                            <label><input type=\"radio\" id=\"checked\" name=\"remember\" /> Remember me</label>\n                            <p> Forgot <a href=\"#\">password</a></p>\n                        </div>\n                    </form>\n                </div>\n\n                <h2>Or</h2>\n                <h2>Use social sign in</h2>\n\n                <div class=\"logo\">\n                    <img src={logoGoogle} width=\"50px\" alt=\"blogo\" />\n                    {/* <img src={logoFacebook} width=\"50px\" alt=\"gg\" /> */}\n                </div><br />\n                <span class=\"rgt\">If you don't have account<a href=\"#\"> Register</a></span>\n            </div>\n        </div>\n    );\n}\n\nexport default LoginPage;\n","import React from \"react\";\n// import loginRegister from \"../../assets/images/logo-Register.svg\";\n// import logoFacebook  from \"../..assets/images/facebook.png\";\n// import logoGoogle from \"../..assets/images/google.svg\";\n\n\nfunction RegisterPage(){\n    return(\n        <div class=\"column\">\n        \n        <div class=\"left-coloumn\">\n            <h1>Logo</h1>\n            <img src=\"../../assets/images/logo-Register.svg\" width=\"400px\" alt=\"logo\"/>\n            <h3>That is your market</h3>\n\n        </div>\n\n        <div class=\"right-column\">\n\n            <div class=\"login\">\n                <h2>Register with your e-mail</h2><br/>\n\n                <form action=\"\" class=\"form\">\n                        <label for=\"name\"><b>Username</b></label>\n                        <input type=\"text\" placeholder=\"Username\" name=\"name\" required/>\n                        <label for=\"uname\"><b>Email address</b></label>\n                        <input type=\"text\" placeholder=\"Email address\" name=\"uname\" required/>\n                        <label for=\"psw\"><b>Password</b></label>\n                        <input type=\"password\" placeholder=\"Password\" name=\"psw\" required/>\n\n                        <label><input type=\"radio\" id=\"check\" name=\"remember\"/> Remember me</label><br/>\n        \n                        <button type=\"submit\">Submit</button><br/>\n                </form>\n            </div>\n\n            <h2>Or</h2>\n            <h2>Use social sign in</h2>\n\n            <div class=\"logo\">\n                {/* <img src= {logoGoogle} width=\"50px\" alt= \"blogo\"/> */}\n                {/* <img src= {logoFacebook} width=\"50px\" alt= \"gg\"/> */}\n            </div>\n\n            <span class=\"rgt\">If you have account<a href=\"#\">Login</a></span>\n        </div>\n    </div>\n\n    );\n}\n\nexport default RegisterPage;","import React from \"react\";\nimport \"./post-component.css\";\nimport iconProfile from \"./man.svg\";\nimport postImage from \"./bg2.jpg\";\n\nfunction PostCoponent({ profile, post }) {\n  return (\n    <article className=\"post-component\">\n      <header>\n        <img src={profile ? profile.img : iconProfile} alt=\"profile\"/>\n        <div>\n          <h2>{profile ? profile.name : \"nameUser\"}</h2>\n          <p>{profile ? profile.follower : \"NoF\"}</p>\n        </div>\n      </header>\n      <main>\n        {/* <img src={post ? post.image : postImage} /> */}\n        <img\n          src={post ? post.img : postImage}\n          alt=\"post image\"\n        />\n        <p>\n          {post\n            ? post.detail\n            : \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Industryâ€™s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\"}\n        </p>\n      </main>\n      <footer>\n        <div className=\"post-footer-left\">\n          <p>like </p>\n          <p>comment</p>\n          <p>Chat</p>\n        </div>\n        <div className=\"post-footer-right\"></div>\n      </footer>\n    </article>\n  );\n}\n\nexport default PostCoponent;\n","import React from \"react\";\nimport PostComponent from \"../../components/PostComponent\";\n\nfunction PublicPage() {\n  let tem = [\n    {\n      profile: {\n        img: \"https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg\",\n        name: \"Kittipat\",\n        follower: \"12.1K\",\n      },\n      post: {\n        img: \"https://www.treehugger.com/thmb/bM_zeJcC8UpFkNa39UK69dfoT2w=/735x0/__opt__aboutcom__coeus__resources__content_migration__mnn__images__2017__01__cow-in-pasture-crop2-3b8cdbd62aee45f6ab8d49228fa85272.jpg\",\n        detail:\n          \"Ipsum is simply dummy text of the printing and typesetting industry. Industryâ€™s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n      },\n    },\n    {\n      profile: {\n        img: \"https://www.flaticon.com/svg/static/icons/svg/3135/3135789.svg\",\n        name: \"Sutima\",\n        follower: \"20.4K\",\n      },\n      post: {\n        img: \"https://cdn.britannica.com/55/174255-050-526314B6/brown-Guernsey-cow.jpg\",\n        detail:\n          \"simply dummy text of the printing and typesetting industry. Industryâ€™s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n      },\n    },\n    {\n      profile: {\n        img: \"https://www.flaticon.com/svg/static/icons/svg/3011/3011292.svg\",\n        name: \"Chakriya\",\n        follower: \"5.12M\",\n      },\n      post: {\n        img: \"https://dkpo4ygqb6rh6.cloudfront.net/COWSIGNALS_COM/imageresized/4023/8248646f7e35630b2bb4bf597c22b73a/2560_1440_75_fixedjpg/cowsignals_2560px.jpg\",\n        detail:\n          \"text of the printing and typesetting industry. Industryâ€™s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n      },\n    },\n  ];\n  return (\n    <div\n      style={{\n        paddingBottom: 70,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      {tem.map((val, key) => {\n        return (\n          <div\n            style={{\n              marginTop: 32,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <PostComponent post={val.post} profile={val.profile} key={key} />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default PublicPage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n//components\nimport Navbar from \"./components/Navbar\";\nimport LoginPage from \"./screens/LoginPage\";\nimport RegisterPage from \"./screens/RegisterPage\";\nimport PublicPage from \"./screens/PublicPage\";\nimport { ButtonS1 } from \"./components/ButonStyle\";\n\n//style\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <Navbar\n          menu={\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              <Link to=\"/login\" className=\"button-style-1\">\n                Login\n              </Link>\n\n              <Link\n                to=\"/register\"\n                className=\"button-style-1\"\n                style={{ marginLeft: 20 }}\n              >\n                Register\n              </Link>\n            </div>\n          }\n        />\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/register\">\n            <RegisterPage />\n          </Route>\n          <Route path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route path=\"/\">\n            <PublicPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}